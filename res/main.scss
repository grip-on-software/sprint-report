@import "node_modules/@fortawesome/fontawesome-free/scss/fontawesome";
@import "node_modules/@fortawesome/fontawesome-free/scss/brands";
@import "node_modules/@fortawesome/fontawesome-free/scss/regular";
@import "node_modules/@fortawesome/fontawesome-free/scss/solid";
$warning: hsl(36, 100%, 67%);
@import "node_modules/bulma/bulma";
@import "node_modules/bulma-slider/dist/css/bulma-slider";
@import "node_modules/bulma-tooltip/dist/css/bulma-tooltip";
@import "node_modules/@gros/visualization-ui/res/spinner";

@media print {
	#navbar, #options {
		display: none
	}
	.table {
		.project .display-name, .sprint .tags, .feature .icon {
			display: none
		}
		tbody {
			page-break-inside: avoid
		}
	}
	.chart {
		transform: scale(.7) translate(-25%);
		.details {
			display: none
		}
	}
}

body {
    font-family: 'Open Sans', sans-serif;
}

#header {
    margin-bottom: 10px;    
    border-bottom: 1px solid #eee;
    font-weight: 400;
}

#header h1 {
    padding: 1.5rem;
    white-space: nowrap;
    span.projects {
        text-indent: 100%;
        overflow: hidden;
        color: transparent;
    }
}

.tabs ul {
    flex-wrap: wrap;
}

.features .tabs.is-toggle {
    li.is-first a {
        border-bottom-left-radius: $radius;
        border-top-left-radius: $radius;
    }
    li.is-last a {
        border-bottom-right-radius: $radius;
        border-top-right-radius: $radius;
    }
    li:last-child {
        margin-left: 0.25rem;
    }
}


#project-filter, #sprints-meta {
    padding: .5rem 0 0 0;
    font-size: .7rem;
    label {
        display: flex;
        padding-right: .5em;
    }
}

#features {
    margin: .75rem 0 0 .5rem;
    .column {
        padding: .25rem;
    }
    .category {
        &:hover .icon {
            color: $link;
        }
        cursor: pointer;
        flex: none;
        width: 7rem;
        white-space: nowrap;
        .name {
            margin-left: .25rem;
        }
    }
    .selection .panel-heading {
        border-bottom-left-radius: $radius;
        border-bottom-right-radius: $radius;
    }
}
#feature-selection {
    overflow: visible;
    .panel:not(:last-child) {
        margin-bottom: 0;
        .panel-block:not(.drag):last-child {
            border-bottom: 0;
        }
    }
    .tabs {
        li {
            flex-grow: 1;
        }
        a {
            border-top-right-radius: 0;
            border-top-left-radius: 0;
        }
    }
}

#config .checkbox {
    margin: .5rem 0;
}

#config .checkbox input {
    margin-right: .25rem;
}

.tabs {
	overflow: visible;
    ul {
        width: 100%;
    }

    &.is-toggle {
        li {
            /* Do something with colors */
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                $color-invert: nth($pair, 2);
                &:not(:last-child) a.is-#{$name} {
                    border-right-width: 2px;
                }
                a.is-#{$name} {
                    border-color: $color;
                    color: $black;
                    &:hover {
                        background-color: $color;
                        color: $color-invert;
                    }
                }
            }
        }
        li:only-child a {
            border-radius: 4px 4px 4px 4px;
        }
    }
    .tag {
	    background-color: #ffffff;
	    color: #000000;
        font-size: .6em;
        padding-left: 0.5em;
        padding-right: 0.5em;
        height: 1.5em;
        margin-left: 0.5em;
        margin-right: -0.5em;
        &:hover {
	        background-color: #f5f5f5;
	        color: #4a4a4a;
	        cursor: text;
        }
    }
}
.tabs, .panel {
    li.is-active a, .panel-block {
        &.drag, &.drag:hover {
	        z-index: 3;
	        cursor: grab;
        }
        &.dragging {
            cursor: grabbing;
        }
    }
}
.panel-heading .panel-icon {
    cursor: pointer;
    vertical-align: baseline;
    margin-right: .25em;
}
.panel-block {
    position: relative;
    display: flex;
    .panel-icon {
        flex-grow: 0;
        font-size: .75rem;
        width: 1.33em;
        margin-right: .25em;
        text-align: right;
        color: $grey-dark;
        &.is-disabled {
            cursor: default;
            color: #767676;
        }
        &:not(:first-child) {
            margin-left: .25em;
        }
    }
    a.panel-icon:not(.is-disabled):hover {
        color: $link;
    }
    .feature {
        margin-right: .25em;
        flex-grow: 1;
        color: #000000;
    }
    &.drag {
        background: $panel-block-hover-background-color;
        &, + .panel-block {
            border-top: 1px solid $border;
        }
    }
}

.section.is-small {
    padding: 1rem 1.5rem;
}

#sources {
	overflow-x: auto;
	width: 100%;
    td.age {
	    white-space: nowrap;
    }
}

article.section {
    padding: 2rem 1.5rem;
	overflow-x: auto;
	width: 100%;
}

.section.is-resizing {
    overflow: visible;
}

#container, #sources {
    position: relative;
    .is-loaded {
        position: relative;
        z-index: 99;
    }
    .spinner.is-overlay {
        position: absolute;
        top: 1.5rem;
        opacity: 0.8;
        z-index: 0;
    }
}

.table {
    .icon {
        margin-left: .25rem;
    }
    .details {
        font-size: .925rem;
        th {
            white-space: nowrap;
        }
        a {
            color: #266ad9;
        }
    }
}

svg.chart {
    overflow: visible;
    clip: auto;
    margin: 0 auto 0 auto;
    .axis.x0, .axis.y0, .axis.yx {
        line {
            stroke-width: 0.5;
            stroke-opacity: 0.7;
        }
    }
}

svg.scatterplot {
    .axis.x2, .axis.y2 {
        line {
            stroke: lightgrey;
            stroke-width: 0.5;
            stroke-opacity: 0.7;
        }
        path {
            stroke-width: 0;
        }
    }
}

g.clusters {
    circle {
        fill-opacity: 0.5;
    }
    text {
        fill: black;
        stroke: white;
        font-weight: bold;
        text-anchor: middle;
        filter: drop-shadow(0 0 2px #444444);
    }
}

g.regressions {
    path {
        stroke-opacity: 0.8;
    }
    text {
        font-size: 0.75rem;
        text-anchor: end;
    }
}

svg.sankey {
    .legend rect.sample {
        fill-opacity: 0.9;
        stroke-opacity: 0.9;
    }
    .nodes {
        rect {
            cursor: move;
            fill-opacity: 0.9;
        }
    }
    .links {
        stroke-opacity: 0.5;
        path:hover {
            stroke-opacity: 0.8;
        }
    }
}

.focus {
    circle {
        fill: #F1F3F3;
        stroke: rgb(0, 67, 125);
        stroke-width: 2px;
        fill-opacity: .5;
    }

    line {
        stroke: #555;
        stroke-width: 1px;
    }

    &.fixed .details tspan.has-source {
        &, tspan {
            fill: $info;
        }
    }
    .details {
        path, tspan {
            fill: #F1F3F3;
        }
        path.icon {
            fill: $info;
        }
        text {
            font-size: .8em;
        }
        tspan.highlight {
            font-weight: bold;
        }

        rect {
            border-radius: 20px;
        }
    }
}

.tooltip {
    &::before, &::after {
        transition: opacity .5s ease;
        opacity: 0;
        content: '';
        position: absolute;
        font-weight: normal;
    }
    &.is-tooltip-center {
        &::before {
            text-align: center;
        }
    }
}
